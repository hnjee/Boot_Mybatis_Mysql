## DB 연결 
# 1. Server Port 변경 (8080 -> 80)
server.port=80

# 2. DB 설정 
# SpringBoot 2.0 이전엔 Datasource tomcat 기본 jdbc가 제공됐었음 
# 2.0 이후에는 HikariCP을 제공하는 것으로 변경됨 
# SqlSessionTemplate, SqlSession은 기본제공, 생성할 필요가 없음  

#spring.datasource.hikari.username=user01
#spring.datasource.hikari.password=user01

#spring.datasource.hikari.driver-class-name=com.mysql.cj.jdbc.Driver
# mysql 8 이후 : com.mysql.cj.jdbc.Driver
# mysql 8 이전 : com.mysql.jdbc.Driver

# spring.datasource.hikari.jdbc-url=jdbc:mysql://localhost:3306/user
#spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/user

spring.datasource.username=user01
spring.datasource.password=user01
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mysql://localhost:3306/user

##Schedule
spring.task.scheduling.pool.size=8
spring.task.scheduling.thread-name-prefix=custom_


# 3. Mybatis
mybatis.config-location=classpath:database/mybatisConfig.xml

#----------------------------------------------------------
## JSP View 연결
# pom.xml에 jstl과 jasper 추가 확인
# /WEB-INF/views/ 폴더들은 webapp 아래에 직접 만들어줘야함 
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#----------------------------------------------------------
## FileUpload
# multipart 사용여부
spring.servlet.multipart.enabled=true
# 파일당 최대 파일 크기
spring.servlet.multipart.max-file-size=10MB
# 총 파일 크기 
spring.servlet.multipart.max-request-size=100MB

spring.aop.proxy-target-class=true

board.notice.filePath=upload/notice
board.qna.filePath=upload/qna

#----------------------------------------------------------
## log4jdbc
# 콘솔에 sql문 띄우기
log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator

#----------------------------------------------------------
## message
# message 파일의 위치
spring.messages.basename=message/message

# encoding 설정 
spring.messages.encoding=UTF-8

# 메시지 코드(키)가 없는 경우
# 예외를 발생시키지 않고 코드 자체를 출력
spring.messages.use-code-as-default-message=true
# false 예외 발생

# properties 파일의 변경을 감지할 시간 간격
spring.messages.cache-duration=60

